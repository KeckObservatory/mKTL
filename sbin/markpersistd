#! /usr/bin/env kpython3

description = '''
This is a subprocess invoked by a mktl.Daemon.Store instance; its sole purpose
is to receive broadcasts of any 'persistent' items and queue any/all incoming
updates for persistent storage to disk. Where and how the value is stored is
governed entirely by the Daemon/Persist.py code.

The motivation for using a subprocess comes from two sources: one is the
simplicity of using the existing mKTL publish/subscribe machinery, the other
is to lighten the resource load on the 'main' daemon process.
'''

import argparse
import sys
import mktl
import time


def main():

    config = parse_command_line()

    store = config.store
    uuid = config.uuid

    store = mktl.get(store)
    matches = 0
    watched = 0

    for item in store:
        key = item.key
        config = store.config[key]
        item_uuid = config['uuid']

        if item_uuid != uuid:
            continue

        matches += 1

        try:
            persist = config['persist']
        except KeyError:
            continue

        if persist == True:
            item.register(mktl.Daemon.Persist.save)
            watched += 1


    if matches == 0:
        raise RuntimeError("no items found in '%s' for UUID %s" % (store, uuid))

    if watched == 0:
        print('No persistent items found, markpersistd subprocess exiting.')
        sys.exit(0)

    while True:
        try:
            time.sleep(30)
        except (KeyboardInterrupt, SystemExit):
            break


def parse_command_line():

    arguments = dict()
    arguments['formatter_class'] = argparse.RawDescriptionHelpFormatter
    arguments['description'] = description
    ##arguments['epilog'] = epilog

    parser = argparse.ArgumentParser(**arguments)

    parser.add_argument('store', help='Name of the mKTL store')
    parser.add_argument('uuid', help='Unique identifier for the mKTL daemon')

    parsed = parser.parse_args()
    return parsed



if __name__ == '__main__':
    main()

# vim: set expandtab tabstop=8 softtabstop=4 shiftwidth=4 autoindent:
